# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2023-05-26 15:11:06
"""
import arcpy
from sys import argv

def EcosystemBiodiversitySubIndex(coral_reef_ohi_clipped_="Biodiversity SubIndex Variables\\coral_reef_ohi_clipped_", seagrass_point_ohi_clipped_="Biodiversity SubIndex Variables\\seagrass_point_ohi_clipped_", mangroves_ohi_clipped_="Biodiversity SubIndex Variables\\mangroves_ohi_clipped_", tree_cover_clipped_="Biodiversity SubIndex Variables\\tree_cover_clipped_", coral_percent_area="G:\\Brazil_SCI\\Brazil_SCI.gdb\\coral_reef_indicator", mangrove_percent_area="G:\\Brazil_SCI\\Brazil_SCI.gdb\\mangrove_indicator", seagrass_buffer_spatial_join="G:\\Brazil_SCI\\Brazil_SCI.gdb\\seagrass_indicator", tree_cover_mean="G:\\Brazil_SCI\\Brazil_SCI.gdb\\tree_cover_indicator", biodiversity_5km_buffer="biodiversity_5km_buffer"):  # EcosystemBiodiversitySubIndex

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageExt")
    arcpy.CheckOutExtension("ImageAnalyst")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Analysis Tools.tbx")
    Field_Type = "DOUBLE"
    Field_Type_4_ = "DOUBLE"

    # Process: Seagrass Spatial Join (Spatial Join) (analysis)
    arcpy.analysis.SpatialJoin(target_features=biodiversity_5km_buffer, join_features=seagrass_point_ohi_clipped_, out_feature_class=seagrass_buffer_spatial_join, join_operation="JOIN_ONE_TO_ONE", join_type="KEEP_ALL", field_mapping="", match_option="INTERSECT", search_radius="", distance_field_name="")

    # Process: Coral Reef Summarize Within (Summarize Within) (analysis)
    coral_reef_buffer = "G:\\Brazil_SCI\\Brazil_SCI.gdb\\coral_reef_indicator"
    Output_Grouped_Table = ""
    arcpy.analysis.SummarizeWithin(in_polygons=biodiversity_5km_buffer, in_sum_features=coral_reef_ohi_clipped_, out_feature_class=coral_reef_buffer, keep_all_polygons="KEEP_ALL", sum_fields=[], sum_shape="ADD_SHAPE_SUM", shape_unit="SQUAREKILOMETERS", group_field="", add_min_maj="NO_MIN_MAJ", add_group_percent="NO_PERCENT", out_group_table=Output_Grouped_Table)

    # Process: Mangrove Summarize Within (Summarize Within) (analysis)
    mangrove_buffer = "G:\\Brazil_SCI\\Brazil_SCI.gdb\\mangrove_indicator"
    Output_Grouped_Table_2_ = ""
    arcpy.analysis.SummarizeWithin(in_polygons=biodiversity_5km_buffer, in_sum_features=mangroves_ohi_clipped_, out_feature_class=mangrove_buffer, keep_all_polygons="KEEP_ALL", sum_fields=[], sum_shape="ADD_SHAPE_SUM", shape_unit="SQUAREKILOMETERS", group_field="", add_min_maj="NO_MIN_MAJ", add_group_percent="NO_PERCENT", out_group_table=Output_Grouped_Table_2_)

    # Process: Coral Reef Percent Area Calculate Field (Calculate Field) (management)
    coral_percent_area = arcpy.management.CalculateField(in_table=coral_reef_buffer, field="coral_reef_area", expression="!SUM_Area_SQUAREKILOMETERS! / (!Shape_Area! / 1000000)", expression_type="PYTHON3", code_block="", field_type=Field_Type)[0]

    # Process: Mangrove Percent Area Calculate Field (Calculate Field) (management)
    mangrove_percent_area = arcpy.management.CalculateField(in_table=mangrove_buffer, field="mangrove_percent_area", expression="!SUM_Area_SQUAREKILOMETERS! / (!Shape_Area! / 1000000)", expression_type="PYTHON3", code_block="", field_type=Field_Type_4_)[0]

    # Process: Tree Cover Reclassify (Reclassify) (sa)
    tree_cover_reclassify = "G:\\Brazil_SCI\\Brazil_SCI.gdb\\Reclass_tree1"
    Tree_Cover_Reclassify = tree_cover_reclassify
    tree_cover_reclassify = arcpy.sa.Reclassify(in_raster=tree_cover_clipped_, reclass_field="VALUE", remap="0 0;3 1;4 1;5 1;9 1;11 0;12 0;13 0;15 0;20 0;21 0;23 0;24 0;25 0;29 0;30 0;31 0;32 0;33 0;39 0;40 0;41 0;46 0;47 0;48 0;49 1;NODATA 0", missing_values="DATA")
    tree_cover_reclassify.save(Tree_Cover_Reclassify)


    # Process: Tree Cover Zonal Statistics as Table (Zonal Statistics as Table) (sa)
    arcpy.sa.ZonalStatisticsAsTable(in_zone_data=biodiversity_5km_buffer, zone_field="id", in_value_raster=tree_cover_reclassify, out_table=tree_cover_mean, ignore_nodata="DATA", statistics_type="MEAN", process_as_multidimensional="CURRENT_SLICE", percentile_values=90)
    .save(Tree_Cover_Zonal_Statistics_as_Table)


if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"G:\Brazil_SCI\Brazil_SCI.gdb", workspace=r"G:\Brazil_SCI\Brazil_SCI.gdb"):
        EcosystemBiodiversitySubIndex(*argv[1:])
